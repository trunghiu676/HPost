@model IEnumerable<App.Models.Blog.Category>

@using App.Menu
@inject AdminSidebarService _AdminSidebarService

@{
    ViewData["Title"] = "Chuyên mục Blog";
    Layout = "/Views/Shared/_LayoutAdmin.cshtml";
}

<p>
    <a asp-action="Create" class="btn btn-primary btn-sm">Tạo chuyên mục</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Model)
        {
            await RenderCategory(item, 0);
        }

    </tbody>
</table>


@{
    //tạo các dữ liệu, level là cấp độ chuyên mục, render nội dung trong item
    async Task RenderCategory(Category item, int level)
    {
        string prefix = string.Concat(Enumerable.Repeat("|--", level));
        <tr>
            <td>
                @Html.Raw(prefix)
                <a asp-action="Edit" asp-route-id="@item.Id">
                    @Html.DisplayFor(modelItem => item.Title)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Slug)
            </td>
            <td>
                <a asp-action="Details" asp-route-id="@item.Id">Chi tiết</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Xóa</a>
            </td>
        </tr>
        //Kiểm tra trong item có chuyên mục con hay không, nếu có tiếp tục render chuyên mục con
        if (item.CategoryChildren?.Count > 0)
        {
            //sử dụng đệ quy để render hết danh mục con đồng thời tăng cấp độ danh mục
            foreach (var cCategory in item.CategoryChildren)
            {
                await RenderCategory(cCategory, level + 1);
            }
        }
    }
}

@{
    _AdminSidebarService.SetActive("Category", "Index", "Blog");
}
@section Sidebar
{
    @Html.Raw(_AdminSidebarService.renderHtml())
}