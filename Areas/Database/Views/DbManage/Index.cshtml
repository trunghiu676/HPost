@using Microsoft.EntityFrameworkCore
@using System.Data

@using App.Menu
@inject AdminSidebarService _AdminSidebarService

@inject AppDbContext dbContext

@{
    Layout = "/Views/Shared/_LayoutAdmin.cshtml";
    ViewData["Title"] = "Thong tin db";
    var connect = dbContext.Database.GetDbConnection();
    var dbname = connect.Database;
    var can_connect = dbContext.Database.CanConnect();

}
<partial name="_AlertMessage" />
<p>- Database: @dbname</p>
<p>- Source: @connect.DataSource</p>
<p>- State: @connect.State</p>
<hr>
<h2>Migration</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations())
{
    <p>@migration</p>
}
@foreach (var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (pending)</p>
}
@if (!can_connect)
{
    <p class="alert alert-danger">Khong co kha nang ket noi den databse </p>
}
@if (dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
    <button class="btn btn-success" asp-action="Migrate">Tao db(cap nhat Migration)</button>
</form>
}
@if (can_connect)
{
    <h2>Cac table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
    @foreach (System.Data.DataRow item in table.Rows)
        {
            <li>@item["TABLE_NAME"]</li>
        }
    </ul>
    <a class="btn btn-danger" asp-action="DeleteDb">Xoa database: @dbname</a>
    <a class="btn btn-success" asp-action="SeedData">Seed Data: @dbname</a>
}

@{
    _AdminSidebarService.SetActive("DbManage", "Index", "Database");
}
@section Sidebar
{
    @Html.Raw(_AdminSidebarService.renderHtml())
}